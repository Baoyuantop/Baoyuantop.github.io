<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://baoyuantop.github.io</id>
    <title>Baoyuan</title>
    <updated>2020-01-01T01:24:20.070Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://baoyuantop.github.io"/>
    <link rel="self" href="https://baoyuantop.github.io/atom.xml"/>
    <logo>https://baoyuantop.github.io/images/avatar.png</logo>
    <icon>https://baoyuantop.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Baoyuan</rights>
    <entry>
        <title type="html"><![CDATA[Vue 的数据流]]></title>
        <id>https://baoyuantop.github.io/post/vuedeshujuliu</id>
        <link href="https://baoyuantop.github.io/post/vuedeshujuliu">
        </link>
        <updated>2020-01-01T01:05:40.000Z</updated>
        <summary type="html"><![CDATA[<p>Vue 中的数据流</p>
]]></summary>
        <content type="html"><![CDATA[<p>Vue 中的数据流</p>
<!-- more -->
<h3 id="双向绑定">双向绑定</h3>
<p>model(数据) 和 view(视图) 之间的绑定， 任一方的更新都会触发另一方的更新。</p>
<h3 id="单向数据流">单向数据流</h3>
<p>model的更新会触发视图更新， 视图的更新堆model没什么影响。</p>
<h3 id="vue-的应用">Vue 的应用</h3>
<ul>
<li>Vue是单向数据流，不是双向绑定。</li>
<li>Vue的双向绑定不过是语法糖。</li>
<li>Object.defineProperty 是Vue底层用来做数据响应式更新的，不是双向绑定。</li>
</ul>
<h3 id="数据驱动">数据驱动</h3>
<ul>
<li>Vue 是数据驱动的视图框架，DOM跟数据是相互映射的，只有数据改变的时候视图才会做出相应的更新。</li>
<li>数据可以来自与自身的 data 属性、父元素的 prop、或者状态管理 Vuex。</li>
<li>数据改变触发视图更新有一些条件：</li>
</ul>
<blockquote>
<ol>
<li>数据必须写进 data{},这样的话会有响应式。</li>
<li>仅把对象名称写进 data{} 是没有效果的，要写上属性。</li>
<li>data{} 中的数据要写进视图中，否则不会响应式。</li>
</ol>
</blockquote>
<p>基于这些特征我们要学会操作数据，不能直接操作 DOM。</p>
<h3 id="vue响应式更新原理">Vue响应式更新原理</h3>
<ul>
<li>实例化的时候会对 data{} 下的数据进行处理，添加 getter 与 setter 的代理，以后读取写入数据都要经过代理层。使用到 Object.defineProperty.</li>
<li>组件在渲染的时候将 data{} 中用到的数据放进 Watcher。</li>
</ul>
]]></content>
    </entry>
</feed>